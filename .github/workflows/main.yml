name: Main Workflow
on: [push]
jobs:
  build:
    name: Build
    strategy:
      matrix:
        python-version: [
          "3.10",
          "3.11",
          "3.12",
          latest,
          rc
        ]
    runs-on: ubuntu-latest
    container: python:${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - run: python --version
      - run: pip install -r requirements.txt
      - run: |
          pip install black
          black . --check
        if: matrix.python-version == '3.12'
      - run: |
          pip install pylint
          cd src
          PYTHONPATH=. pylint --rcfile ../.pylintrc *
          cd ..
        if: matrix.python-version == 'python:3.12'
      - run: |
          pip install mypy
          mypy src --ignore-missing-imports --disable-error-code no-redef
      - run: |
          pip install pytest
          pytest
      - run: python setup.py test
        if: matrix.python-version != '3.12' && matrix.python-version != 'latest'
  build-pypy:
    name: Build PyPy
    strategy:
      matrix:
        python-version: ["3.10"]
    runs-on: ubuntu-latest
    container: pypy:${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - run: pypy --version
      - run: pip install -r requirements.txt
      - run: |
          pip install black
          black . --check
        if: matrix.python-version == '3.12'
      - run: |
          pip install pylint
          cd src
          PYTHONPATH=. pylint --rcfile ../.pylintrc *
          cd ..
        if: matrix.python-version == 'python:3.12'
      - run: |
          pip install mypy
          mypy src --ignore-missing-imports --disable-error-code no-redef
      - run: |
          pip install pytest
          pytest
      - run: pypy setup.py test
        if: matrix.python-version != '3.12' && matrix.python-version != 'latest'
